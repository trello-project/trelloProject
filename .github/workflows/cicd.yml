# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: CI/CD
on:
  push:
    branches: [ feat/cicd ]
  pull_request:
    branches: [ dev ]

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: trello-s3-bucket
  AWS_CODE_DEPLOY_APPLICATION: trello-CD
  AWS_CODE_DEPLOY_GROUP: trello-cd-group

permissions:
  contents: read

jobs:
  build-with-gradle:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name:  application.properties 바꾸기 제발
        run: |
          echo "Current working directory: $(pwd)"
          echo "Replacing RDS_DB_URL"
          sed -i "s|{{RDS_DB_URL}}|${{ secrets.RDS_DB_URL }}|" ./src/main/resources/application.properties
          cat ./src/main/resources/application.properties
          echo "Replacing RDS_DB_USERNAME"
          sed -i "s|{{RDS_DB_USERNAME}}|${{ secrets.RDS_DB_USERNAME }}|" ./src/main/resources/application.properties
          cat ./src/main/resources/application.properties
          echo "Replacing RDS_DB_PASSWORD"
          sed -i "s|{{RDS_DB_PASSWORD}}|${{ secrets.RDS_DB_PASSWORD }}|" ./src/main/resources/application.properties
          cat ./src/main/resources/application.properties

      - name: Build Project
        run: ./gradlew clean build -x test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}

      - name: Upload to S3
        run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://${{ env.AWS_S3_BUCKET }}/trello/$GITHUB_SHA.zip --source .

      - name: Deploy to EC2 변수 찍어보기
        run: echo "$env.CODE_DEPLOY_APPLITION" | echo "$env.AWS_CODE_DEPLOY_GROUP" | echo "$env.AWS_S3_BUCKET" 
      - name: Deploy to EC2
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=${{ env.AWS_S3_BUCKET }},key=trello/$GITHUB_SHA.zip,bundleType=zip
